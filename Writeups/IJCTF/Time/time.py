func3_div = lambda x, y: (x // y) & 0xffffffff
func2_sum = lambda x, y: (x + y) & 0xffffffff
func1_mul = lambda x, y: (x * y) & 0xffffffff
func4_sub = lambda x, y: (x - y) & 0xffffffff
check_fns = [
    func1_mul, func2_sum, func2_sum, func1_mul, func3_div, func4_sub, func1_mul, func3_div, func3_div, func4_sub, func2_sum, func3_div, func4_sub,
    func2_sum, func4_sub, func3_div, func4_sub, func1_mul, func3_div, func3_div, func3_div, func1_mul, func3_div, func1_mul, func4_sub, func4_sub,
    func2_sum, func1_mul, func2_sum, func4_sub, func3_div, func4_sub, func4_sub
]
flag_fns = [
    func3_div, func3_div, func3_div, func2_sum, func4_sub, func4_sub, func3_div, func2_sum, func3_div, func3_div, func3_div, func3_div, func4_sub,
    func3_div, func4_sub, func2_sum, func4_sub, func2_sum, func3_div, func2_sum, func4_sub, func3_div, func2_sum, func3_div, func2_sum, func3_div,
    func3_div, func2_sum, func2_sum, func2_sum, func2_sum, func4_sub, func2_sum
]
flag_data = [
    0x330, 0x10, 0x5771, 0x197, 0x7128, 0x11C, 0x24, 0x22, 0x0D7, 0x0A1, 0x1A4, 0x171, 0x7BC, 0x14, 0x0B, 0x27, 0x4EAC, 0x17C, 0x33CC, 0x104, 0x688D,
    0x109, 0x35DA, 0x71, 0x20E, 0x194, 0x38E0, 0x104, 0x5E, 0x2C, 0x1B, 0x17, 0x123, 0x0EB, 0x51, 3, 0x3747, 0x10B, 0x44, 5, 0x19E, 0x13C, 0x4F0B,
    0x163, 0x0D, 0x70, 0x58A4, 0x0BA, 0x41, 0x39, 0x4E2, 0x19, 0x4BB4, 0x0CC, 6, 0x32, 0x23, 0x11, 0x23, 0x20, 0x58, 0x22, 0x26D, 0x1F2, 0x0F, 0x3B
]
check_data = [
    0x4B8A7DEB, 0x3D, 0x8B, 0x1E6, 0x1E, 0x6E, 0x72044D77, 0x77, 0x0C391, 0x143, 0x311, 0x13, 0x762762AA, 0x0D, 0x1110, 6, 0x0ADAC, 0x0C3, 0x371,
    0x17, 0x0CD, 0x1E3, 0x35808, 0x114, 0x78, 0x13, 0x14, 0x1E8, 0x222, 0x16, 0x1D00, 0x100, 0x34, 0x12, 0x45E20CD7, 0x167, 0x34E18, 0x12C, 0, 0x1E6,
    0x10EFD, 0x191, 0x79435E51, 0x0BE, 0x12B27, 0x89, 0x333333D1, 5, 0x20, 0x0C, 0x31E, 6, 0x2D, 0x1DB, 0x1F8480A5, 0x18E, 0x148, 0x1DA, 0x85, 7,
    0x36FDB, 0x105, 0x0B0, 0x1B, 0x0D, 0x0C
]

print("".join([chr(flag_fns[i](flag_data[2 * i], flag_data[2 * i + 1])) for i in range(33)][i] for i in [[check_fns[i](check_data[2 * i], check_data[2 * i + 1]) for i in range(33)].index(i) for i in [pow(i, 191, 0x383) for i in range(33)]]))
